{"version":3,"sources":["config.js","hash.js","components/Rate.js","components/modalStyles.js","components/Recommended.js","components/DisplayAlbumsButton.js","components/PersonalTaste.js","components/TitleText.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","Rate","state","rating","changeRating","bind","newRating","this","setState","widgetRatedColors","widgetHoverColors","widgetDimensions","Widget","Component","customStyles","content","top","left","right","bottom","marginRight","transform","spotifyApi","SpotifyWebApi","library","add","farFaStar","PersonalTaste","props","handleOpenModal","trackName","showModal","modalTrack","handleCloseModal","setAccessToken","token","albumUri","trackUri","console","log","play","context_uri","offset","uri","className","artist","name","slice","toLowerCase","recommendedTracks","map","track","i","scope","style","width","src","album_art","title","onClick","album_id","track_id","icon","size","isOpen","color","outsideClick","DisplayAlbumsButton","ref","useState","albumPopoverOpen","toggleAlbumPopover","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","body","albumTypes","length","album","place","onOuterAction","text","albums","singles","popoverOpen","togglePopover","images","url","type","height","Object","keys","artistOverallSound","audioFeature","toFixed","overallSound","user","twoTracks","artists","Recommended","artistAlbums","noOfRecommendedAlbums","ClickedTitleText","SearchTitleText","Search","clickArtistProfile","chosenArtist","fetch","range","weight","then","response","json","data","chosenArtistOverallSound","randomUserTracks","artistAlbumTypes","acousticness","danceability","energy","instrumentalness","loudness","speechiness","tempo","valence","onSearchChange","onRangeChange","onWeightChange","getMe","err","e","value","searchArtists","max","items","followers","total","reset","placeholder","onChange","class","role","key","id","App","duration_ms","is_playing","progress_ms","getCurrentlyPlaying","_token","access_token","$","beforeSend","xhr","setRequestHeader","success","href","join","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e718d475.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/en/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"29c9533a402248d8981f6885e388cf02\";\nexport const redirectUri = \"https://evakato14.github.io/music-accessibility/\";\nexport const scopes = [\n  \"user-top-read\",\n  \"user-read-currently-playing\",\n  \"user-read-playback-state\",\n  \"user-modify-playback-state\"\n];\n","const hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import React, { Component } from \"react\";\nimport Ratings from \"react-ratings-declarative\";\n\nclass Rate extends Component {\n  constructor() {\n    super();\n    this.state = {\n      rating: 0\n    };\n    this.changeRating = this.changeRating.bind(this);\n  }\n\n  changeRating(newRating) {\n    this.setState({\n      rating: newRating\n    });\n  }\n\n  render() {\n    return (\n      <Ratings\n        rating={this.state.rating}\n        widgetRatedColors=\"#ffdd00\"\n        widgetHoverColors=\"#ffdd00\"\n        widgetDimensions=\"30px\"\n        changeRating={this.changeRating}\n      >\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n        <Ratings.Widget />\n      </Ratings>\n    );\n  }\n}\n\nexport default Rate;\n","export const customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\n","import React, { Component } from \"react\";\nimport * as SpotifyWebApi from \"spotify-web-api-js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faStar as farFaStar } from \"@fortawesome/free-regular-svg-icons\";\nimport Rate from \"./Rate\";\nimport ReactModal from \"react-modal\";\nimport { customStyles } from \"./modalStyles\";\n\nvar spotifyApi = new SpotifyWebApi();\nlibrary.add(farFaStar);\n\nclass PersonalTaste extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      modalTrack: \"\"\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n  componentDidMount() {\n    spotifyApi.setAccessToken(this.props.token);\n  }\n\n  play(albumUri, trackUri) {\n    console.log(albumUri, trackUri);\n    spotifyApi.play({ context_uri: albumUri, offset: { uri: trackUri } });\n  }\n\n  handleOpenModal = trackName => {\n    this.setState({ showModal: true, modalTrack: trackName });\n  };\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <h3 className=\"col-6 align-self-center\">\n            Here are the <span className=\"text-primary\">top 10 songs</span> we\n            recommend for you to get into {this.props.artist.name}\n            {this.props.artist.name.slice(-1).toLowerCase() == \"s\"\n              ? \"'\"\n              : \"'s\"}{\" \"}\n            music.\n          </h3>\n          <table className=\"table col-6\">\n            <tbody>\n              {this.props.recommendedTracks ? (\n                this.props.recommendedTracks.map((track, i) => (\n                  <tr>\n                    <th\n                      scope=\"row\"\n                      style={{ width: \"5%\" }}\n                      className=\"align-self-center\"\n                    >\n                      <h6 className=\"mt-2\">{i + 1}</h6>\n                    </th>\n                    <td style={{ width: \"10%\" }} className=\"align-self-center\">\n                      <img\n                        src={track.album_art}\n                        style={{ width: \"125%\" }}\n                      ></img>\n                    </td>\n                    <td style={{ width: \"75%\" }} className=\"text-left\">\n                      <h6 className=\"mt-2\">\n                        <strong>{track.title}</strong>\n                      </h6>\n                    </td>\n                    <td style={{ width: \"5%\" }} className=\"text-right\">\n                      <a\n                        className=\"btn btn-sm\"\n                        onClick={() =>\n                          this.play(\n                            \"spotify:album:\" + track.album_id,\n                            \"spotify:track:\" + track.track_id\n                          )\n                        }\n                      >\n                        <i className=\"fa fa-play-circle fa-2x\"></i>\n                      </a>\n                    </td>\n                    <td style={{ width: \"5%\" }} className=\"text-right\">\n                      <a\n                        className=\"btn btn-sm\"\n                        onClick={() => this.handleOpenModal(track.title)}\n                      >\n                        <FontAwesomeIcon\n                          icon={farFaStar}\n                          size=\"lg\"\n                          className=\"mt-1\"\n                        />\n                      </a>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <div></div>\n              )}\n            </tbody>\n            <ReactModal isOpen={this.state.showModal} style={customStyles}>\n              <div className=\"text-center\">\n                <h3>\n                  Rate{\" \"}\n                  <span className=\"text-primary\">\n                    \"{this.state.modalTrack}\"\n                  </span>\n                </h3>\n                <h5>1 star (least enjoyment) to 10 stars (most enjoyment)</h5>\n                <p>\n                  Rating songs helps our recommendation algorithm become\n                  smarter.\n                </p>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col text-center\">\n                  <Rate></Rate>\n                </div>\n              </div>\n              <div className=\"row mt-4\">\n                <div className=\"col text-center\">\n                  <button\n                    className=\"btn btn-danger mr-2\"\n                    onClick={this.handleCloseModal}\n                  >\n                    Close\n                  </button>\n                  <button\n                    className=\"btn btn-primary ml-2\"\n                    onClick={this.handleCloseModal}\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </ReactModal>\n          </table>\n        </div>\n        <div className=\"row mt-3 mb-3 \">\n          <div className=\"col-1\"></div>\n          <h3 className=\"col-10\">\n            Here are the <span className=\"text-primary\">top album(s)</span> we\n            recommend for you to get into {this.props.artist.name}\n            {this.props.artist.name.slice(-1).toLowerCase() == \"s\"\n              ? \"'\"\n              : \"'s\"}{\" \"}\n            music.\n          </h3>\n        </div>\n        <div className=\"row justify-content-center\">\n          <h4 className=\"display-4\" style={{ color: \"#ff5c5c\" }}>\n            Coming soon!\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PersonalTaste;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Popover from \"react-popover\";\nimport \"./Popover.css\";\n\nlet outsideClick = false;\n\nfunction useOutsideAlerter(ref) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        outsideClick = true;\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref]);\n}\n\nfunction DisplayAlbumsButton(props) {\n  let [albumPopoverOpen, toggleAlbumPopover] = useState(false);\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n  return (\n    <div ref={wrapperRef} className=\"d-inline\">\n      <Popover\n        isOpen={albumPopoverOpen && !outsideClick}\n        className=\"Popover-body Popover-tipShape\"\n        body={\n          <div className=\"container-fluid\">\n            {props.albumTypes.length < 5 ? (\n              props.albumTypes.map(album => (\n                <div className=\"mt-2 mb-2\">\n                  <img src={album.album_art} style={{ width: \"8%\" }}></img>\n                  <span className=\"h5 ml-2\">{album.title}</span>\n                </div>\n              ))\n            ) : (\n              <div className=\"row\">\n                {props.albumTypes.map(album => (\n                  <div className=\"col-6 mt-1 mb-1\">\n                    <img src={album.album_art} style={{ width: \"10%\" }}></img>\n                    <span className=\"h5 ml-2\">{album.title}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        }\n        place=\"right\"\n        onOuterAction={toggleAlbumPopover}\n      >\n        <button\n          className=\"btn btn-light btn-lg\"\n          onClick={() => {\n            {\n              toggleAlbumPopover(true);\n            }\n            {\n              outsideClick = false;\n            }\n          }}\n        >\n          <span className=\"text-primary h5\">\n            {props.albumTypes.length}{\" \"}\n            {props.albumTypes.length == 1 ? props.text : props.text + \"s\"}\n          </span>\n        </button>\n      </Popover>\n    </div>\n  );\n}\n\nexport default DisplayAlbumsButton;\n","import React, { useState } from \"react\";\nimport Recommended from \"./Recommended\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport DisplayAlbumsButton from \"./DisplayAlbumsButton\";\n\nfunction getDisplayAlbumsButton(albums, singles) {\n  if (albums.length && !singles.length) {\n    return (\n      <DisplayAlbumsButton\n        albumTypes={albums}\n        text=\"album\"\n      ></DisplayAlbumsButton>\n    );\n  } else if (albums.length && singles.length) {\n    return (\n      <div className=\"d-inline\">\n        <DisplayAlbumsButton\n          albumTypes={albums}\n          text=\"album\"\n        ></DisplayAlbumsButton>{\" \"}\n        and{\" \"}\n        <DisplayAlbumsButton\n          albumTypes={singles}\n          text=\"single\"\n        ></DisplayAlbumsButton>\n      </div>\n    );\n  } else {\n    return (\n      <DisplayAlbumsButton\n        albumTypes={singles}\n        text=\"single\"\n      ></DisplayAlbumsButton>\n    );\n  }\n}\n\nfunction PersonalTaste(props) {\n  let [popoverOpen, togglePopover] = useState(false);\n\n  return (\n    <div\n      onClick={() => {\n        {\n          popoverOpen && togglePopover(false);\n        }\n      }}\n    >\n      <div className=\"container mb-5 mt-4\">\n        <div className=\"row\">\n          <h3 className=\"col-5 align-self-center pb-5\">\n            <div>\n              <img\n                src={props.artist.images[0].url}\n                className=\"img-responsive rounded-circle mb-3\"\n                style={{ width: \"31%\" }}\n              ></img>\n            </div>\n            {!props.albumTypes.albums ? (\n              <Loader type=\"Bars\" color=\"#428bca\" height={80} width={80} />\n            ) : (\n              <div>\n                Using{\" \"}\n                {getDisplayAlbumsButton(\n                  props.albumTypes.albums,\n                  props.albumTypes.singles\n                )}{\" \"}\n                on Spotify, here are the audio features of {props.artist.name}\n                {props.artist.name.slice(-1).toLowerCase() == \"s\"\n                  ? \"'\"\n                  : \"'s\"}{\" \"}\n                overall sound.\n              </div>\n            )}\n          </h3>\n          <hr></hr>\n          <table className=\"table table-borderless col-7\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Audio Feature</th>\n                <th scope=\"col\">Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(props.artistOverallSound).map(audioFeature => (\n                <tr>\n                  <td className=\"text-info h6\">{audioFeature}</td>\n                  <td className=\"h6\">\n                    {props.artistOverallSound[\"loudness\"] ? (\n                      props.artistOverallSound[audioFeature].toFixed(3)\n                    ) : (\n                      <Loader\n                        type=\"Audio\"\n                        color=\"#454545\"\n                        height={20}\n                        width={20}\n                      />\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div className=\"row\">\n          <table className=\"table table-borderless col-6\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Audio Feature</th>\n                <th scope=\"col\">Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(props.overallSound).map(audioFeature => (\n                <tr>\n                  <td className=\"text-info h6\">{audioFeature}</td>\n                  <td className=\"h6\">\n                    {props.overallSound[\"loudness\"] ? (\n                      props.overallSound[audioFeature].toFixed(3)\n                    ) : (\n                      <Loader\n                        type=\"Audio\"\n                        color=\"#454545\"\n                        height={20}\n                        width={20}\n                      />\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <h3 className=\"col-6 align-self-center\">\n            <div>\n              {props.user.images.length ? (\n                <img\n                  src={props.user.images[0].url}\n                  className=\"img-responsive rounded-circle mb-3 w-25\"\n                ></img>\n              ) : (\n                \"\"\n              )}\n            </div>\n\n            {props.twoTracks ? (\n              <div>\n                Here are the audio features of your overall music taste, based\n                on your favorite songs like{\" \"}\n                <span className=\"text-primary\">{props.twoTracks[0].name}</span>{\" \"}\n                by{\" \"}\n                <span className=\"text-secondary\">\n                  {props.twoTracks[0].artists[0].name}\n                </span>{\" \"}\n                and{\" \"}\n                <span className=\"text-primary\">{props.twoTracks[1].name}</span>{\" \"}\n                by{\" \"}\n                <span className=\"text-secondary\">\n                  {props.twoTracks[1].artists[0].name}\n                </span>\n                .\n              </div>\n            ) : (\n              <Loader type=\"Bars\" color=\"#428bca\" height={80} width={80} />\n            )}\n          </h3>\n        </div>\n        <Recommended\n          artist={props.artist}\n          recommendedTracks={props.recommendedTracks}\n          token={props.token}\n          artistAlbums={props.artistAlbums}\n          noOfRecommendedAlbums={1}\n        ></Recommended>\n      </div>\n    </div>\n  );\n}\n\nexport default PersonalTaste;\n","import React from \"react\";\n\nexport function ClickedTitleText(props) {\n  return (\n    <h1 className=\"display-4\">\n      I want to get into{\" \"}\n      <span className=\"text-success\">\n        {props.artist.name}\n        {props.artist.name.slice(-1).toLowerCase() === \"s\" ? \"'\" : \"'s\"}\n      </span>{\" \"}\n      music...\n    </h1>\n  );\n}\n\nexport function SearchTitleText() {\n  return (\n    <h1 className=\"display-4\">\n      I want to get into{\" \"}\n      <span style={{ color: \"#ff5c5c\" }}>[insert artist here]'s</span> music...\n    </h1>\n  );\n}\n","import React, { Component } from \"react\";\nimport * as SpotifyWebApi from \"spotify-web-api-js\";\nimport PersonalTaste from \"./components/PersonalTaste\";\nimport { ClickedTitleText } from \"./components/TitleText\";\nimport { SearchTitleText } from \"./components/TitleText\";\nimport ReactModal from \"react-modal\";\nimport { customStyles } from \"./components/modalStyles\";\n\nvar spotifyApi = new SpotifyWebApi();\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      showModal: false,\n      artists: \"\",\n      chosenArtist: \"\",\n      chosenArtistOverallSound: {\n        acousticness: 0,\n        danceability: 0,\n        energy: 0,\n        instrumentalness: 0,\n        loudness: 0,\n        speechiness: 0,\n        tempo: 0,\n        valence: 0\n      },\n      overallSound: {\n        valence: 0,\n        danceability: 0,\n        energy: 0,\n        instrumentalness: 0,\n        speechiness: 0,\n        acousticness: 0,\n        loudness: 0,\n        tempo: 0\n      },\n      artistAlbumTypes: {},\n      recommendedTracks: [],\n      range: \"medium_term\",\n      weight: 0.5,\n      randomUserTracks: 0\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.clickArtistProfile = this.clickArtistProfile.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.onRangeChange = this.onRangeChange.bind(this);\n    this.onWeightChange = this.onWeightChange.bind(this);\n  }\n\n  componentDidMount() {\n    spotifyApi.setAccessToken(this.props.token);\n    spotifyApi.getMe(\n      function(err, data) {\n        this.setState({\n          user: data\n        });\n      }.bind(this)\n    );\n  }\n\n  onRangeChange(e) {\n    this.setState({\n      range: e.target.value\n    });\n  }\n\n  onWeightChange(e) {\n    this.setState({\n      weight: e.target.value\n    });\n  }\n\n  handleOpenModal() {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  reset() {\n    this.setState({\n      artists: \"\",\n      chosenArtist: \"\",\n      chosenArtistOverallSound: {\n        acousticness: 0,\n        danceability: 0,\n        energy: 0,\n        instrumentalness: 0,\n        loudness: 0,\n        speechiness: 0,\n        tempo: 0,\n        valence: 0\n      },\n      overallSound: {\n        valence: 0,\n        danceability: 0,\n        energy: 0,\n        instrumentalness: 0,\n        speechiness: 0,\n        acousticness: 0,\n        loudness: 0,\n        tempo: 0\n      },\n      artistAlbumTypes: {},\n      recommendedTracks: [],\n      randomUserTracks: 0\n    });\n  }\n\n  onSearchChange(e) {\n    if (e.target.value) {\n      spotifyApi.searchArtists(\n        e.target.value,\n        function(err, data) {\n          let max = 20;\n          if (data.artists) {\n            max = data.artists.items.length;\n          }\n          for (var i = 0; i < data.artists.items.length; i++) {\n            if (data.artists.items[i].followers.total < 1000) {\n              max = i;\n              break;\n            }\n          }\n          this.setState({\n            artists: data.artists.items.slice(0, max)\n          });\n        }.bind(this)\n      );\n    } else {\n      this.setState({\n        artists: \"\"\n      });\n    }\n  }\n\n  clickArtistProfile = artist => {\n    this.setState({\n      chosenArtist: artist\n    });\n    fetch(\n      \"https://evakato14.pythonanywhere.com/audio_features?artist=\" +\n        artist.uri +\n        \"&token=\" +\n        this.props.token +\n        \"&range=\" +\n        this.state.range +\n        \"&weight=\" +\n        this.state.weight\n    ).then(response =>\n      response.json().then(data => {\n        this.setState({\n          chosenArtistOverallSound: data[\"artist_audio_features\"],\n          overallSound: data[\"user_audio_features\"],\n          randomUserTracks: data[\"user_two_songs\"],\n          artistAlbumTypes: data[\"artist_album_types\"],\n          recommendedTracks: data[\"recommended_tracks\"]\n        });\n      })\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"container mt-4 mb-5\">\n        {this.state.chosenArtist.name ? (\n          <div>\n            <button className=\"btn btn-light mb-4\" onClick={() => this.reset()}>\n              <i className=\"fa fa-search mr-2\"></i>\n              Search another artist\n            </button>\n            <ClickedTitleText\n              artist={this.state.chosenArtist}\n            ></ClickedTitleText>\n            <PersonalTaste\n              user={this.state.user}\n              overallSound={this.state.overallSound}\n              artist={this.state.chosenArtist}\n              artistOverallSound={this.state.chosenArtistOverallSound}\n              twoTracks={this.state.randomUserTracks}\n              albumTypes={this.state.artistAlbumTypes}\n              token={this.props.token}\n              recommendedTracks={this.state.recommendedTracks}\n            ></PersonalTaste>\n            <button className=\"btn btn-light\" onClick={() => this.reset()}>\n              <i className=\"fa fa-search mr-2\"></i>Search another artist\n            </button>\n          </div>\n        ) : (\n          <div>\n            <SearchTitleText></SearchTitleText>\n            <div className=\"row mt-4 mb-4\">\n              <div className=\"col-sm-3\"></div>\n              <div className=\"col-sm-6\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Search Artist\"\n                  onChange={this.onSearchChange}\n                ></input>\n              </div>\n              <div className=\"col-sm-3 text-left\">\n                <button\n                  className=\"btn btn-light\"\n                  onClick={() => this.handleOpenModal()}\n                >\n                  <i class=\"fa fa-cog fa-2x\"></i>\n                </button>\n                <ReactModal isOpen={this.state.showModal} style={customStyles}>\n                  <h6 className=\"text-center\">\n                    We use your listening history to calculate your preferred\n                    sound.\n                  </h6>\n                  <h6 className=\"text-center\">\n                    Feel free to change the time period from which we collect\n                    your listening habits:\n                  </h6>\n                  <div\n                    className=\"btn-group d-block text-center mb-4\"\n                    role=\"group\"\n                  >\n                    <button\n                      type=\"button\"\n                      value=\"short_term\"\n                      className={\n                        \"btn \" +\n                        (this.state.range == \"short_term\"\n                          ? \"btn-dark\"\n                          : \"btn-outline-dark\")\n                      }\n                      onClick={this.onRangeChange}\n                    >\n                      Past 30 Days\n                    </button>\n                    <button\n                      type=\"button\"\n                      value=\"medium_term\"\n                      className={\n                        \"btn \" +\n                        (this.state.range == \"medium_term\"\n                          ? \"btn-dark\"\n                          : \"btn-outline-dark\")\n                      }\n                      onClick={this.onRangeChange}\n                    >\n                      Past 6 Months\n                    </button>\n                    <button\n                      type=\"button\"\n                      value=\"long_term\"\n                      className={\n                        \"btn \" +\n                        (this.state.range == \"long_term\"\n                          ? \"btn-dark\"\n                          : \"btn-outline-dark\")\n                      }\n                      onClick={this.onRangeChange}\n                    >\n                      Past Year\n                    </button>\n                  </div>\n                  <h6 className=\"text-center\">\n                    We think it's important to factor how representative of the\n                    artist's sound is in our recommendation algorithm.\n                  </h6>\n                  <h6 className=\"text-center\">\n                    Feel free to change the weighting of this representativeness\n                    factor.\n                  </h6>\n                  <div className=\"d-block text-center\">\n                    <span className=\"mr-4 small\">Not very representative</span>\n                    <div className=\"btn-group\" role=\"group\">\n                      <button\n                        type=\"button\"\n                        value={0.1}\n                        className={\n                          \"btn \" +\n                          (this.state.weight == 0.1\n                            ? \"btn-dark\"\n                            : \"btn-outline-dark\")\n                        }\n                        onClick={this.onWeightChange}\n                      >\n                        10%\n                      </button>\n                      <button\n                        type=\"button\"\n                        value={0.3}\n                        className={\n                          \"btn \" +\n                          (this.state.weight == 0.3\n                            ? \"btn-dark\"\n                            : \"btn-outline-dark\")\n                        }\n                        onClick={this.onWeightChange}\n                      >\n                        30%\n                      </button>\n                      <button\n                        type=\"button\"\n                        value={0.5}\n                        className={\n                          \"btn \" +\n                          (this.state.weight == 0.5\n                            ? \"btn-dark\"\n                            : \"btn-outline-dark\")\n                        }\n                        onClick={this.onWeightChange}\n                      >\n                        50%\n                      </button>\n                      <button\n                        type=\"button\"\n                        value={0.7}\n                        className={\n                          \"btn \" +\n                          (this.state.weight == 0.7\n                            ? \"btn-dark\"\n                            : \"btn-outline-dark\")\n                        }\n                        onClick={this.onWeightChange}\n                      >\n                        70%\n                      </button>\n                      <button\n                        type=\"button\"\n                        value={0.9}\n                        className={\n                          \"btn \" +\n                          (this.state.weight == 0.9\n                            ? \"btn-dark\"\n                            : \"btn-outline-dark\")\n                        }\n                        onClick={this.onWeightChange}\n                      >\n                        90%\n                      </button>\n                    </div>\n                    <span className=\"ml-4 small\">Very representative</span>\n                  </div>\n                  <div className=\"text-center mt-4\">\n                    <button\n                      className=\"btn btn-primary \"\n                      onClick={this.handleCloseModal}\n                    >\n                      Close\n                    </button>\n                  </div>\n                </ReactModal>\n              </div>\n            </div>\n            {this.state.artists ? (\n              this.state.artists.map(artist => (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-lg btn-light mr-2 mt-2\"\n                  key={artist.id}\n                  onClick={() => this.clickArtistProfile(artist)}\n                >\n                  {artist.name}\n                </button>\n              ))\n            ) : (\n              <div></div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Player from \"./Player\";\nimport Search from \"./Search\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      is_playing: \"Paused\",\n      progress_ms: 0\n    };\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n  }\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      //this.getCurrentlyPlaying(_token);\n    }\n  }\n\n  componentDidUpdate() {\n    //this.getCurrentlyPlaying(this.state.token);\n  }\n\n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/player\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        this.setState({\n          item: data.item,\n          is_playing: data.is_playing,\n          progress_ms: data.progress_ms\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.token && (\n          <div className=\"container\">\n            <h1 className=\"display-4 mt-3\" style={{ color: \"#2FB8C3\" }}>\n              Music Accessibility\n            </h1>\n            <p>Eva Kato</p>\n            <a\n              className=\"btn btn--loginApp-link mt-1\"\n              href={`${authEndpoint}?client_id=${clientId}&response_type=token&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&show_dialog=true`}\n            >\n              <button type=\"button\" className=\"btn btn-outline-dark\">\n                Try it out!\n              </button>\n            </a>\n            <div className=\"container w-75 mt-3 mb-5\">\n              <h4 className=\"text-danger\">\n                Notes: Play button on recommended tracks may not work. The\n                entire rating system is unimplemented (so far!), and album\n                recommendations are also a work in progress\n              </h4>\n              <h5 className=\"mt-4\" style={{ color: \"#2F6EC3\" }}>\n                Have you ever gotten an artist recommendation from a friend?\n                Ever wondered where to start when exploring an artist's\n                extensive discography?\n              </h5>\n              <h6>\n                The goal of my recommendation algorithm is to create a more\n                targeted approach to enjoying a new artist. Instead of being\n                introduced to an artist with random or popular songs, listeners\n                will have the greatest chance of enjoying an artist with a\n                data-driven recommendation algorithm to find the most accessible\n                songs and albums.\n              </h6>\n              <h5 className=\"mt-4\" style={{ color: \"#2F6EC3\" }}>\n                What makes a song accessible?\n              </h5>\n              <h6>\n                Listeners who are unfamiliar with a song should enjoy it within\n                their first few attempts. Accessible songs have sounds that are\n                somewhat similar to the music a listener already enjoys. For\n                example, if a person typically listens to mainstream pop, an\n                accessible song for that person will sound somewhat similar to\n                mainstream pop.\n              </h6>\n              <h6>\n                However, if someone wants to become familiar with an artist’s\n                music, it is also important that the recommended songs represent\n                the overall sound of the artist.\n              </h6>\n              <h6>\n                Therefore, accessible songs have a good combination of both\n                similarity to listener's taste and representativeness of given\n                artist. Still, the weight of representativeness can be changed\n                to the user's preferences (there is a feature in settings),\n                depending on how important that is to the user.\n              </h6>\n              <h5 className=\"mt-4\" style={{ color: \"#2F6EC3\" }}>\n                How is \"similarity\" calculated?\n              </h5>\n              <h6>\n                Spotify audio data contains variables to describe a song’s\n                sound. The variables used for this analysis include:\n              </h6>\n              <table class=\"table table-sm\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Audio Feature</th>\n                    <th scope=\"col\">Definition</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Valence</th>\n                    <td>the positivity/negativity of a song’s sound</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Danceability</th>\n                    <td>\n                      the extent to which a song is suitable for dancing based\n                      on its rhythm and tempo\n                    </td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Energy</th>\n                    <td>the intensity of a song’s sound</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Instrumentalness</th>\n                    <td>the likelihood that a track contains no vocals</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Tempo</th>\n                    <td>the estimated beats per minute of a song</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Loudness</th>\n                    <td>the loudness of a song, measured in decibels</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Speechiness</th>\n                    <td>the extent to which a song contains spoken words</td>\n                  </tr>\n                  <tr>\n                    <th scope=\"row\">Acousticness</th>\n                    <td>the likelihood that a song is acoustic</td>\n                  </tr>\n                </tbody>\n              </table>\n              <h6>\n                The most similar songs will have the smallest distance between\n                their respective audio features.\n              </h6>\n              <h5 className=\"mt-4\" style={{ color: \"#2F6EC3\" }}>\n                What artists can be searched?\n              </h5>\n              <h6>\n                Any artists on Spotify with at least 1000 followers are\n                included.\n              </h6>\n              <h5 className=\"mt-4\" style={{ color: \"#2F6EC3\" }}>\n                What albums and songs are accounted for in the recommendation\n                algorithm?\n              </h5>\n              <h6>\n                The albums and songs that are included must be a certain\n                popularity compared its own artist. This rules out extra\n                material that doesn't make sense for a new listener to start\n                with, such as live albums, demos, compilations, commentary, etc.\n                as well as less important and \"nonessential\" albums to an\n                artist.\n              </h6>\n            </div>\n            <div className=\"mb-5\">\n              <a href=\"https://github.com/evakato14/music-accessibility\">\n                Web Interface Code\n              </a>\n              <a className=\"d-block\" href=\"https://github.com/evakato14/ma-api\">\n                Python API Code\n              </a>\n            </div>\n          </div>\n        )}\n        {this.state.token && (\n          //<Player\n          //item={this.state.item}\n          //is_playing={this.state.is_playing}\n          //progress_ms={this.progress_ms}\n          //token={this.state.token}\n          ///>\n          <Search token={this.state.token}></Search>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}